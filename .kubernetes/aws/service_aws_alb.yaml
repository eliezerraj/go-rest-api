apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: go-rest-api-alb
  labels:
    app: go-rest-api-alb
  annotations:
    kubernetes.io/ingress.class: alb
    alb.ingress.kubernetes.io/load-balancer-name: go-rest-api-alb
    alb.ingress.kubernetes.io/target-type: ip
    alb.ingress.kubernetes.io/scheme: internet-facing
    alb.ingress.kubernetes.io/subnets: subnet-0956adabb1a865c9f, subnet-0919b0c60fd95ced5, subnet-0c80cc19ec025d0dd
    alb.ingress.kubernetes.io/security-groups: sg-02d30bad7ac866825
    alb.ingress.kubernetes.io/healthcheck-port: traffic-port
    alb.ingress.kubernetes.io/healthcheck-path: /health
    alb.ingress.kubernetes.io/healthcheck-interval-seconds: '10'
    alb.ingress.kubernetes.io/healthcheck-timeout-seconds: '5'
    alb.ingress.kubernetes.io/success-codes: '200'
    alb.ingress.kubernetes.io/healthy-threshold-count: '2'
    alb.ingress.kubernetes.io/unhealthy-threshold-count: '3'
    alb.ingress.kubernetes.io/backend-protocol: HTTP
    alb.ingress.kubernetes.io/healthcheck-protocol: HTTP
    alb.ingress.kubernetes.io/ssl-policy: ELBSecurityPolicy-FS-1-2-Res-2020-10
    alb.ingress.kubernetes.io/certificate-arn: arn:aws:acm:us-east-2:908671954593:certificate/a784955c-9a8b-4403-bea2-527035ab3782
    alb.ingress.kubernetes.io/listen-ports: |-
      [{
        "HTTP": 80
      }, {
        "HTTPS": 443
      }]
spec:
  defaultBackend:
    service:
      name: go-rest-api-nodeport
      port:
        number: 8903
  rules:
    - http:
        paths:
          - path: /
            pathType: Prefix
            backend:
              service:
                name: go-rest-api-nodeport
                port:
                  number: 8903